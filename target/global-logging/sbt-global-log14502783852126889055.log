[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\bajka\AppData\Local\Temp\idea3.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\bajka\AppData\Local\Temp\idea3.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.9 (Oracle Corporation Java 21.0.2)
[debug]       Load.loadUnit: plugins took 73.6484ms
[debug]       Load.loadUnit: defsScala took 0.2822ms
[debug] [Loading] Scanning directory C:\Users\bajka\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\bajka\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 15.9541 ms
[debug]           Load.resolveProject(global-plugins) took 38.7406ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\bajka\.sbt\1.0\plugins, plugins: List(<none>))) took 80.2721ms
[debug] [Loading] Done in C:\Users\bajka\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 103.3972ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2636ms
[debug]     Load.loadUnit(file:/C:/Users/bajka/.sbt/1.0/plugins/, ...) took 185.2474ms
[debug]   Load.apply: load took 339.567ms
[debug]   Load.apply: resolveProjects took 4.5867ms
[debug]   Load.apply: finalTransforms took 47.5013ms
[debug]   Load.apply: config.delegates took 5.8228ms
[debug]   Load.apply: Def.make(settings)... took 303.4167ms
[debug]   Load.apply: structureIndex took 68.8098ms
[debug]   Load.apply: mkStreams took 1.4517ms
[info] loading global plugins from C:\Users\bajka\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 1699.2625ms
[debug]           Load.loadUnit: plugins took 31.8827ms
[debug]           Load.loadUnit: defsScala took 0.006ms
[debug] [Loading] Scanning directory C:\Users\bajka\OneDrive\Pulpit\neww\quickstart\project
[debug]             Load.loadUnit: mkEval took 6.0494ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\bajka\OneDrive\Pulpit\neww\quickstart\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.7564 ms
[info] loading settings for project quickstart-build from plugins.sbt,idea3.sbt ...
[debug]               Load.resolveProject(quickstart-build) took 10.0546ms
[debug]             Load.loadTransitive: finalizeProject(Project(id quickstart-build, base: C:\Users\bajka\OneDrive\Pulpit\neww\quickstart\project, plugins: List(<none>))) took 14.6804ms
[debug] [Loading] Done in C:\Users\bajka\OneDrive\Pulpit\neww\quickstart\project, returning: (quickstart-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 239.7031ms
[debug]           Load.loadUnit: cleanEvalClasses took 15.7982ms
[debug]         Load.loadUnit(file:/C:/Users/bajka/OneDrive/Pulpit/neww/quickstart/project/, ...) took 288.516ms
[debug]       Load.apply: load took 290.5356ms
[debug]       Load.apply: resolveProjects took 0.1247ms
[debug]       Load.apply: finalTransforms took 11.8855ms
[debug]       Load.apply: config.delegates took 0.3737ms
[debug]       Load.apply: Def.make(settings)... took 70.3675ms
[debug]       Load.apply: structureIndex took 26.7073ms
[debug]       Load.apply: mkStreams took 0.0027ms
[info] loading project definition from C:\Users\bajka\OneDrive\Pulpit\neww\quickstart\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 741.698ms
[debug]     Load.loadUnit: defsScala took 0.0034ms
[debug] [Loading] Scanning directory C:\Users\bajka\OneDrive\Pulpit\neww\quickstart
[debug]       Load.loadUnit: mkEval took 0.3098ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.typelevel.sbt.tpolecat.TpolecatPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(spray.revolver.RevolverPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbtassembly.AssemblyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(io.github.davidmweber.FlywayPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.typelevel.sbt.tpolecat.TpolecatPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(spray.revolver.RevolverPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbtassembly.AssemblyPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,org.typelevel.sbt.tpolecat.TpolecatPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,sbtassembly.AssemblyPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,spray.revolver.RevolverPlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 7.5767 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 38.6634ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\bajka\OneDrive\Pulpit\neww\quickstart, plugins: List(<none>))) took 49.1576ms
[debug] [Loading] Done in C:\Users\bajka\OneDrive\Pulpit\neww\quickstart, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 157.8886ms
[debug]     Load.loadUnit: cleanEvalClasses took 5.9161ms
[debug]   Load.loadUnit(file:/C:/Users/bajka/OneDrive/Pulpit/neww/quickstart/, ...) took 906.7459ms
[debug] Load.apply: load took 912.8755ms
[debug] Load.apply: resolveProjects took 0.1405ms
[debug] Load.apply: finalTransforms took 37.4999ms
[debug] Load.apply: config.delegates took 0.3529ms
[debug] Load.apply: Def.make(settings)... took 377.5356ms
[debug] Load.apply: structureIndex took 27.453ms
[debug] Load.apply: mkStreams took 0.0028ms
[info] set current project to quickstart (in build file:/C:/Users/bajka/OneDrive/Pulpit/neww/quickstart/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 54914 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 54914, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to quickstart (in build file:/C:/Users/bajka/OneDrive/Pulpit/neww/quickstart/)
[debug] > Exec(idea-shell, None, None)
